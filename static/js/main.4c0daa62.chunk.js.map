{"version":3,"sources":["components/styles/StyledVideoWrapper.js","components/styles/StyledVideo.js","components/Video.js","components/styles/StyledPlaylistHeader.js","components/styles/StyledJourney.js","components/PlaylistHeader.js","components/styles/StyledPlaylistItem.js","components/PlaylistItem.js","components/hoc/withLink.js","components/styles/StyledPlaylistitems.js","components/containers/PlaylistItems.js","components/styles/StyledNightmode.js","components/Nightmode.js","components/styles/StyledPlaylist.js","components/containers/Playlist.js","components/styles/StyledPlayer.js","components/containers/Player.js","components/styles/GlobalStyle.js","components/containers/App.js","serviceWorker.js","index.js"],"names":["StyledVideoWrapper","styled","div","StyledVideo","Video","active","autoplay","endCallback","progressCallback","width","height","style","position","top","playing","controls","url","video","onEnded","onProgress","StyledPlaylistHeader","StyledJourney","PlaylistHeader","total","title","num","StyledPlaylistItem","props","theme","color","played","PlaylistItem","className","duration","withLink","WrappedComponent","to","id","StyledPlaylistitems","PlaylistItemWithLink","Playlistitems","videos","map","key","StyledNightmode","NightMode","nightModeCallback","nightMode","type","checked","onChange","StyledPlaylist","Playlist","length","PlaylistItems","StyledPlayer","bgcolor","border","bgcolorItem","bgcolorItemActive","bgcolorPlayed","borderPlayed","themeLight","Player","useState","VideosList","playlist","activeVideo","playlistId","state","setState","useEffect","videoId","match","params","undefined","newActiveVideo","findIndex","prev","location","history","push","pathname","currentVideoIndex","nextVideo","e","playedSeconds","find","prevState","GlobalStyle","createGlobalStyle","App","basename","process","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c0daa62.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst StyledVideoWrapper = styled.div`\n  width: 100%;\n  padding-bottom: 56.25%;\n  position: relative;\n`;\n\nexport default StyledVideoWrapper;\n","import styled from \"styled-components\";\n\nconst StyledVideo = styled.div`\n  position: relative;\n  flex: 2 0 900px;\n\n  @media screen and (max-width: 992px) {\n    width: 100%;\n    display: block;\n  }\n`;\n\nexport default StyledVideo;\n","import React from 'react';\nimport ReactPlayer from 'react-player';\nimport StyledVideoWrapper from './styles/StyledVideoWrapper';\nimport StyledVideo from './styles/StyledVideo';\n\nconst Video = ({ active, autoplay, endCallback, progressCallback }) => (\n  <StyledVideo>\n    <StyledVideoWrapper>\n      <ReactPlayer\n        width=\"100%\"\n        height=\"100%\"\n        style={{ position: \"absolute\", top: \"0\"}}\n        playing={autoplay}\n        controls={true}\n        url={active.video}\n        onEnded={endCallback}\n        onProgress={progressCallback}\n      />\n    </StyledVideoWrapper>\n  </StyledVideo>\n);\n\nexport default Video;","import styled from \"styled-components\";\n\nconst StyledPlaylistHeader = styled.div`\n  background: #696969;\n  font-family: \"Hind\", sans-serif;\n  font-weight: 800;\n  font-size: 1.6em;\n  color: #fff;\n  padding: 0 20px;\n  margin: 0 0 20px 0;\n  min-height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default StyledPlaylistHeader;\n","import styled from \"styled-components\";\n\nconst StyledJourney = styled.div`\n  background: #565656;\n  font-size: 0.8em;\n  padding: 5px 5px;\n  min-width: 50px;\n  display: flex;\n  justify-content: center;\n  border-radius: 5px;\n`;\n\nexport default StyledJourney;\n","import React from 'react';\nimport StyledPlaylistHeader from './styles/StyledPlaylistHeader';\nimport StyledJourney from './styles/StyledJourney';\n\nconst PlaylistHeader = ({ active, total }) => (\n  <StyledPlaylistHeader>\n    <p>{active.title}</p>\n    <StyledJourney>\n      {active.num} / {total}\n    </StyledJourney>\n  </StyledPlaylistHeader>\n);\n\nexport default PlaylistHeader;","import styled from \"styled-components\";\n\nconst StyledPlaylistItem = styled.div`\n  font-family: \"Hind\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: none;\n  border: ${props => (props.active ? \"2px dotted #696969\" : \"none\")};\n  font-size: 1.6em;\n  color: ${props => props.theme.color};\n  min-height: 50px;\n  padding: 10px 20px;\n  margin: 0 0 10px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: ${props => (props.active ? \"5px\" : \"0\")};\n  cursor: pointer;\n  position: relative;\n\n  ::before {\n    display: ${props => (props.active || !props.played ? \"none\" : \"block\")};\n    content: \"\";\n    width: 10px;\n    min-height: 10px;\n    background: #409f4e;\n    border-radius: 50px;\n    position: absolute;\n    left: 0;\n    top: 19px;\n  }\n\n  .player__video-nr {\n    flex-grow: 1;\n    max-width: 30px;\n    padding-right: 20px;\n    border-right: 2px solid #565656;\n  }\n\n  .player__video-name,\n  .player__video-name a {\n    flex-grow: 10;\n    padding: 0 0 0 10px;\n    color: ${props => props.theme.color};\n    text-align: left;\n    text-decoration: none;\n    display: block;\n  }\n\n  .player__video-time {\n    background: #565656;\n    min-width: 45px;\n    color: #fff;\n    font-size: 0.8em;\n    padding: 0px 5px;\n    height: 20px;\n    text-align: center;\n    border-radius: 5px;\n    margin: 0 0 0 5px;\n  }\n\n  .player__video-download {\n    flex-grow: 1; /* default 0 */\n    color: ${props => (props.played ? \"#fff\" : props.theme.color)};\n    margin: 0 0 0 20px;\n    max-width: 30px;\n    padding: 0 20px;\n    border-left: 2px solid #565656;\n    font-family: \"fontello\";\n    font-style: normal;\n    font-weight: normal;\n  }\n\n  .player__video-download a {\n    color: ${props =>\n      props.played && !props.active ? \"#fff\" : props.theme.color};\n  }\n\n  .active {\n    opacity: 0.1;\n  }\n`;\n\nexport default StyledPlaylistItem;\n","import React from \"react\";\nimport StyledPlaylistItem from \"./styles/StyledPlaylistItem\";\n\nconst PlaylistItem = ({ video, active, played }) => {\n  return(\n    <StyledPlaylistItem active={active} played={played}>\n      <div className=\"player__video-nr\">{video.num}</div>\n      <div className=\"player__video-name\">{video.title}</div>\n      <div className=\"player__video-time\">{video.duration}</div>\n    </StyledPlaylistItem>\n  )\n}\n\nexport default PlaylistItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst withLink = WrappedComponent => props => {\n  return(\n    <Link to={`/${props.video.id}`}>\n      <WrappedComponent { ...props } />\n    </Link>\n  )\n}\n\nexport default withLink;","import styled from \"styled-components\";\n\nconst StyledPlaylistitems = styled.div`\n  padding: 0 20px;\n  overflow-y: auto;\n  height: 28vw;\n  max-height: 500px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 2px;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport default StyledPlaylistitems;\n","import React from 'react';\nimport PlaylistItem from '../PlaylistItem';\nimport withLink from '../hoc/withLink';\nimport StyledPlaylistitems from '../styles/StyledPlaylistitems';\n\nconst PlaylistItemWithLink = withLink(PlaylistItem);\n\nconst Playlistitems = ({ videos, active }) => (\n  <StyledPlaylistitems>\n    {videos.map(video => (\n      <PlaylistItemWithLink\n        key={video.id}\n        video={video}\n        active={video.id === active.id ? true : false}\n        played={video.played}\n      />\n    ))}\n  </StyledPlaylistitems>\n)\n\nexport default Playlistitems;","import styled from \"styled-components\";\n\nconst StyledNightmode = styled.div`\n  font-family: \"Hind\", sans-serif;\n  font-weight: 800;\n  font-size: 1.6em;\n  color: ${props => props.theme.color};\n  padding: 0;\n  margin: 20px;\n\n  /* from https://www.w3schools.com/howto/howto_css_switch.asp */\n  /* The switch - the box around the slider */\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 40px;\n    height: 24px;\n  }\n\n  /* Hide default HTML checkbox */\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  /* The slider */\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    transition: 0.4s;\n  }\n\n  .slider:before {\n    position: absolute;\n    content: \"\";\n    height: 16px;\n    width: 16px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    transition: 0.4s;\n  }\n\n  input:checked + .slider {\n    background-color: #3d5138;\n  }\n\n  input:focus + .slider {\n    box-shadow: 0 0 1px #2196f3;\n  }\n\n  input:checked + .slider:before {\n    transform: translateX(16px);\n  }\n\n  /* Rounded sliders */\n  .slider.round {\n    border-radius: 30px;\n  }\n\n  .slider.round:before {\n    border-radius: 50%;\n  }\n`;\n\nexport default StyledNightmode;\n","import React from 'react';\nimport StyledNightmode from './styles/StyledNightmode';\n\nconst NightMode = ({ nightModeCallback, nightMode }) => (\n  <StyledNightmode>\n    <span>Nightmode: </span>\n    <label className=\"switch\">\n      <input type=\"checkbox\" checked={nightMode} onChange={nightModeCallback} />\n      <span className=\"slider round\" />\n    </label>\n  </StyledNightmode>\n);\n\nexport default NightMode;","import styled from \"styled-components\";\n\nconst StyledPlaylist = styled.div`\n  flex: 1 1 450px;\n  overflow: hidden;\n  color: white;\n\n  @media screen and (max-width: 992px) {\n    width: 100%;\n    display: block;\n  }\n`;\n\nexport default StyledPlaylist;\n","import React from \"react\";\nimport PlaylistHeader from \"../PlaylistHeader\";\nimport PlaylistItems from \"../containers/PlaylistItems\";\nimport NightMode from \"../Nightmode\";\nimport StyledPlaylist from \"../styles/StyledPlaylist\";\n\nconst Playlist = ({ videos, active, nightModeCallback, nightMode }) => (\n  <StyledPlaylist>\n    <NightMode nightModeCallback={nightModeCallback} nightMode={nightMode} />\n    <PlaylistHeader active={active} total={videos.length} />\n    <PlaylistItems videos={videos} active={active} />\n  </StyledPlaylist>\n);\n\nexport default Playlist;","import styled from \"styled-components\";\n\nconst StyledPlayer = styled.div`\n  background: ${props => props.theme.bgcolor};\n  border: ${props => props.theme.border};\n  max-width: 1400px;\n  margin: 0 auto;\n  display: flex;\n  transition: all 0.5s ease;\n\n  @media screen and (max-width: 992px) {\n    display: block;\n  }\n`;\n\nexport default StyledPlayer;\n","import React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Video from '../Video';\nimport Playlist from '../containers/Playlist';\nimport StyledPlayer from '../styles/StyledPlayer';\nimport VideosList from '../../assets/playlist.json';\n\nconst theme = {\n  bgcolor: '#353535',\n  bgcolorItem: '#414141',\n  bgcolorItemActive: '#405c63',\n  bgcolorPlayed: '#526d4e',\n  border: 'none',\n  borderPlayed: 'none',\n  color: '#fff',\n};\n\nconst themeLight = {\n  bgcolor: '#fff',\n  bgcolorItem: '#fff',\n  bgcolorItemActive: '#80a7b1',\n  bgcolorPlayed: '#7d9979',\n  border: '1px solid #353535',\n  borderPlayed: 'none',\n  color: '#353535',\n};\n\nconst Player = props => {\n\n  const [state, setState] = useState({\n    videos: VideosList.playlist,\n    activeVideo: VideosList.playlist[0],\n    nightMode: true,\n    playlistId: VideosList.playlistId,\n    autoplay: false\n  });\n\n  useEffect(() => {\n    const videoId = props.match.params.activeVideo;\n    if (videoId !== undefined) {\n      const newActiveVideo = state.videos.findIndex(\n        video => video.id === videoId,\n      );\n      setState(prev => ({\n        ...prev,\n        activeVideo: prev.videos[newActiveVideo],\n        autoplay: props.location.autoplay,\n      }));\n    } else {\n      props.history.push({\n        pathname: `/${state.activeVideo.id}`,\n        autoplay: false,\n      });\n    }\n  }, [\n    props.history,\n    props.location.autoplay,\n    props.match.params.activeVideo,\n    state.activeVideo.id,\n    state.videos,\n  ]);\n\n  const nightModeCallback = () => {\n    setState(prevState => ({ ...prevState, nightMode: !prevState.nightMode }));\n  };\n\n  const endCallback = () => {\n    const videoId = props.match.params.activeVideo;\n    const currentVideoIndex = state.videos.findIndex(\n      video => video.id === videoId,\n    );\n\n    const nextVideo =\n      currentVideoIndex === state.videos.length - 1 ? 0 : currentVideoIndex + 1;\n\n    props.history.push({\n      pathname: `${state.videos[nextVideo].id}`,\n      autoplay: false,\n    });\n  };\n\n  const progressCallback = e => {\n    if (e.playedSeconds > 10 && e.playedSeconds < 11) {\n      const videos = [...state.videos];\n      const playedVideo = videos.find(\n        video => video.id === state.activeVideo.id,\n      );\n      playedVideo.played = true;\n\n      setState(prevState => ({ ...prevState, videos }));\n\n      // setState({\n      //   ...state,\n      //   videos: state.videos.map( element => {\n      //     return element.id === state.activeVideo.id\n      //     ? { ...element, played: true }\n      //     : element;\n      //   })\n      // });\n    }\n  };\n\n  return (\n    <ThemeProvider theme={state.nightMode ? theme : themeLight}>\n      {state.videos !== null ? (\n        <StyledPlayer>\n          <Video\n            active={state.activeVideo}\n            autoplay={state.autoplay}\n            endCallback={endCallback}\n            progressCallback={progressCallback}\n          />\n          <Playlist\n            videos={state.videos}\n            active={state.activeVideo}\n            nightModeCallback={nightModeCallback}\n            nightMode={state.nightMode}\n          />\n        </StyledPlayer>\n      ) : null}\n    </ThemeProvider>\n  );\n};\n\nexport default Player;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-size: 10px;\n    font-family: 'Hind', sans-serif;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport Player from './Player';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport GlobalStyle from '../styles/GlobalStyle';\n\nconst App = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n  <>\n    <Switch>\n      <Route exact path=\"/\" component={Player} />\n      <Route exact path=\"/:activeVideo\" component={Player} />\n    </Switch>\n    <GlobalStyle />\n  </>\n  </BrowserRouter>\n)\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}